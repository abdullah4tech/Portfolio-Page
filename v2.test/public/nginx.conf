# Nginx configuration for optimal web performance and MIME types
# Place this in your nginx sites-available directory or include in your main config

server {
    listen 80;
    listen [::]:80;
    server_name abdullahmustapha.xyz www.abdullahmustapha.xyz;

    # Redirect HTTP to HTTPS (uncomment if using SSL)
    # return 301 https://$server_name$request_uri;

    root /var/www/html;
    index index.html index.htm;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        font/woff
        font/woff2
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types
    #     text/plain
    #     text/css
    #     text/xml
    #     text/javascript
    #     application/json
    #     application/javascript
    #     application/xml+rss
    #     application/atom+xml
    #     image/svg+xml;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:;" always;

    # HSTS (uncomment if using HTTPS)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Handle service worker with correct MIME type
    location ~* \.js$ {
        add_header Content-Type "application/javascript; charset=utf-8";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle CSS files
    location ~* \.css$ {
        add_header Content-Type "text/css; charset=utf-8";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle web fonts
    location ~* \.(woff|woff2|eot|ttf|otf)$ {
        add_header Access-Control-Allow-Origin "*";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle SVG files
    location ~* \.svg$ {
        add_header Content-Type "image/svg+xml; charset=utf-8";
        expires 1M;
        add_header Cache-Control "public";
    }

    # Handle images
    location ~* \.(png|jpg|jpeg|gif|ico|webp|avif)$ {
        expires 1M;
        add_header Cache-Control "public";
    }

    # Handle web manifest
    location ~* \.(webmanifest|manifest)$ {
        add_header Content-Type "application/manifest+json; charset=utf-8";
        expires 1w;
        add_header Cache-Control "public";
    }

    # Handle HTML files - no cache
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Handle service worker registration
    location /sw.js {
        add_header Content-Type "application/javascript; charset=utf-8";
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Vue.js router fallback - handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API routes (if you have a backend API)
    location /api {
        # Proxy to your API server
        # proxy_pass http://localhost:3000;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_cache_bypass $http_upgrade;
    }

    # Block access to sensitive files
    location ~ /\.(htaccess|htpasswd|env|git|svn) {
        deny all;
        return 404;
    }

    location ~ \.(log|sql|bak|backup|tar\.gz)$ {
        deny all;
        return 404;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    # Disable server tokens for security
    server_tokens off;

    # Set max body size for uploads
    client_max_body_size 10M;

    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeouts
    client_body_timeout 3m;
    client_header_timeout 3m;
    keepalive_timeout 100;
    send_timeout 3m;

    # Rate limiting (optional)
    # limit_req_zone $binary_remote_addr zone=one:10m rate=30r/m;
    # limit_req zone=one burst=5 nodelay;
}

# HTTPS configuration (uncomment and configure if using SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name abdullahmustapha.xyz www.abdullahmustapha.xyz;
#
#     # SSL certificates
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # Include all the configuration from the HTTP block above
#     # ... (copy all location blocks and other settings)
# }
